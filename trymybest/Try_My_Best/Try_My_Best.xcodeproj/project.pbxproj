// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		9F2765611BAE9499004765F8 /* 080.Remove_Duplicates_From_Sorted_Array.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765601BAE9499004765F8 /* 080.Remove_Duplicates_From_Sorted_Array.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765631BAE9E17004765F8 /* 080.Remove_From_Duplicates_Sorted_Array_2.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765621BAE9E17004765F8 /* 080.Remove_From_Duplicates_Sorted_Array_2.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765651BAEA59A004765F8 /* 033.Search_in_Rotated_Sorted_Array.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765641BAEA59A004765F8 /* 033.Search_in_Rotated_Sorted_Array.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765691BAEAFE4004765F8 /* 081.Search in Rotated Sorted Array II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765681BAEAFE4004765F8 /* 081.Search in Rotated Sorted Array II.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27656B1BAED0C5004765F8 /* 128.Longest Consecutive Sequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27656A1BAED0C5004765F8 /* 128.Longest Consecutive Sequence.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27656D1BAEE2A4004765F8 /* 001.Two Sum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27656C1BAEE2A4004765F8 /* 001.Two Sum.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27656F1BAEEE12004765F8 /* 018.4Sum.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27656E1BAEEE12004765F8 /* 018.4Sum.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765711BAEF86C004765F8 /* 027.Remove element.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765701BAEF86C004765F8 /* 027.Remove element.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765731BB17A02004765F8 /* 031.Next Permutation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765721BB17A02004765F8 /* 031.Next Permutation.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765751BB17B7F004765F8 /* 060.Permutation Sequence.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765741BB17B7F004765F8 /* 060.Permutation Sequence.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765771BB1819C004765F8 /* 036.Valid Sudoku.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765761BB1819C004765F8 /* 036.Valid Sudoku.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765791BB189EC004765F8 /* 042.Trapping Rain Water.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765781BB189EC004765F8 /* 042.Trapping Rain Water.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27657B1BB1955C004765F8 /* 048.Rotate Image.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27657A1BB1955C004765F8 /* 048.Rotate Image.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27657D1BB1A1CB004765F8 /* 102.Binary Tree Level Order Traversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27657C1BB1A1CB004765F8 /* 102.Binary Tree Level Order Traversal.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27657F1BB1A400004765F8 /* 107.Binary Tree Level Order Traversal II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27657E1BB1A400004765F8 /* 107.Binary Tree Level Order Traversal II.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765811BB1A4AE004765F8 /* 103.Binary Tree Zigzag Level Order Traversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765801BB1A4AE004765F8 /* 103.Binary Tree Zigzag Level Order Traversal.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765831BB271D0004765F8 /* 101.Symmetric Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765821BB271D0004765F8 /* 101.Symmetric Tree.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765851BB27384004765F8 /* 110.Balanced Binary Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765841BB27384004765F8 /* 110.Balanced Binary Tree.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765871BB27562004765F8 /* 114.Flatten Binary Tree to Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765861BB27562004765F8 /* 114.Flatten Binary Tree to Linked List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765891BB2785B004765F8 /* 116.Populating Next Right Pointers in Each Node.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765881BB2785B004765F8 /* 116.Populating Next Right Pointers in Each Node.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27658B1BB27BD6004765F8 /* 117.Populating Next Right Pointers in Each Node II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27658A1BB27BD6004765F8 /* 117.Populating Next Right Pointers in Each Node II.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27658D1BB28040004765F8 /* 105.Construct Binary Tree from Preorder and Inorder Traversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27658C1BB28040004765F8 /* 105.Construct Binary Tree from Preorder and Inorder Traversal.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27658F1BB28B5B004765F8 /* 106.Construct Binary Tree from Inorder and Postorder Traversal.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27658E1BB28B5B004765F8 /* 106.Construct Binary Tree from Inorder and Postorder Traversal.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765911BB29238004765F8 /* 098.Validate Binary Search Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765901BB29238004765F8 /* 098.Validate Binary Search Tree.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765931BB2BC5E004765F8 /* 108.Convert Sorted Array to Binary Search Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765921BB2BC5E004765F8 /* 108.Convert Sorted Array to Binary Search Tree.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765951BB2C707004765F8 /* 109.Convert Sorted List to Binary Search Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765941BB2C707004765F8 /* 109.Convert Sorted List to Binary Search Tree.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765971BB2D4EF004765F8 /* 111.Minimum Depth of Binary Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765961BB2D4EF004765F8 /* 111.Minimum Depth of Binary Tree.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765991BB2D779004765F8 /* 129.Sum Root to Leaf Numbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765981BB2D779004765F8 /* 129.Sum Root to Leaf Numbers.cpp */; settings = {ASSET_TAGS = (); }; };
		9F27659B1BB2DA7D004765F8 /* 050.Pow(x, n).cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27659A1BB2DA7D004765F8 /* 050.Pow(x, n).cpp */; settings = {ASSET_TAGS = (); }; };
		9F27659D1BB2DCE0004765F8 /* 069.Sqrt(x).cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27659C1BB2DCE0004765F8 /* 069.Sqrt(x).cpp */; settings = {ASSET_TAGS = (); }; };
		9F27659F1BB2E341004765F8 /* 009.Palindrome Number.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F27659E1BB2E341004765F8 /* 009.Palindrome Number.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765A11BB2E61E004765F8 /* 258.Add Digits.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765A01BB2E61E004765F8 /* 258.Add Digits.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765A31BB2E69A004765F8 /* 083.Remove Duplicates from Sorted List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765A21BB2E69A004765F8 /* 083.Remove Duplicates from Sorted List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765A51BB379AF004765F8 /* 088.Merge Sorted Array.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765A41BB379AF004765F8 /* 088.Merge Sorted Array.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765A71BB37E54004765F8 /* 021.Merge Two Sorted Lists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765A61BB37E54004765F8 /* 021.Merge Two Sorted Lists.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765A91BB383AD004765F8 /* 023.Merge k Sorted Lists.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765A81BB383AD004765F8 /* 023.Merge k Sorted Lists.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765AB1BB38685004765F8 /* 147.Insertion Sort List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765AA1BB38685004765F8 /* 147.Insertion Sort List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765AD1BB388CB004765F8 /* 148.Sort List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765AC1BB388CB004765F8 /* 148.Sort List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765AF1BB38E68004765F8 /* 075.Sort Colors.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765AE1BB38E68004765F8 /* 075.Sort Colors.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765B21BB39276004765F8 /* 070.Climbing Stairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765B11BB39276004765F8 /* 070.Climbing Stairs.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765B41BB39378004765F8 /* 237.Delete Node in a Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765B31BB39378004765F8 /* 237.Delete Node in a Linked List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765B61BB395C5004765F8 /* 283.Move Zeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765B51BB395C5004765F8 /* 283.Move Zeroes.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765B81BB3970A004765F8 /* 226.Invert Binary Tree.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765B71BB3970A004765F8 /* 226.Invert Binary Tree.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765BA1BB567FA004765F8 /* 217.Contains Duplicate.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765B91BB567FA004765F8 /* 217.Contains Duplicate.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765BC1BB56C94004765F8 /* 242.Valid Anagram.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765BB1BB56C94004765F8 /* 242.Valid Anagram.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765BE1BB56E53004765F8 /* 013.Roman to Integer.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765BD1BB56E53004765F8 /* 013.Roman to Integer.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765C01BB573B4004765F8 /* 232.Implement Queue using Stacks.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765BF1BB573B4004765F8 /* 232.Implement Queue using Stacks.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765C21BB57649004765F8 /* 206.Reverse Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765C11BB57649004765F8 /* 206.Reverse Linked List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765C41BB57951004765F8 /* 202.Happy Number.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765C31BB57951004765F8 /* 202.Happy Number.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765C61BB58BAC004765F8 /* 263.Ugly Number.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765C51BB58BAC004765F8 /* 263.Ugly Number.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765C81BB58DF2004765F8 /* 231.Power of Two.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765C71BB58DF2004765F8 /* 231.Power of Two.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765CA1BB59067004765F8 /* 225.Implement Stack using Queues.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765C91BB59067004765F8 /* 225.Implement Stack using Queues.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765CC1BB5926F004765F8 /* 119.Pascal's Triangle II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765CB1BB5926F004765F8 /* 119.Pascal's Triangle II.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765CE1BB59B14004765F8 /* 019.Remove Nth Node From End of List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765CD1BB59B14004765F8 /* 019.Remove Nth Node From End of List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765D01BB59E48004765F8 /* 219.Contains Duplicate II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765CF1BB59E48004765F8 /* 219.Contains Duplicate II.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2765D21BB5A3B8004765F8 /* 223.Rectangle Area.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2765D11BB5A3B8004765F8 /* 223.Rectangle Area.cpp */; settings = {ASSET_TAGS = (); }; };
		9F29984B1BBEBED800127AFD /* 137.Single Number II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F29984A1BBEBED800127AFD /* 137.Single Number II.cpp */; settings = {ASSET_TAGS = (); }; };
		9F29984E1BBEC24200127AFD /* 268.Missing Number.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F29984D1BBEC24200127AFD /* 268.Missing Number.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2998501BBEC97200127AFD /* 153.Find Minimum in Rotated Sorted Array.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F29984F1BBEC97200127AFD /* 153.Find Minimum in Rotated Sorted Array.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2998521BBED01200127AFD /* 046.Permutations.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2998511BBED01200127AFD /* 046.Permutations.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2998541BBF657000127AFD /* 025.Reverse Nodes in k-Group.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2998531BBF657000127AFD /* 025.Reverse Nodes in k-Group.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2998561BBF6BCB00127AFD /* 143.Reorder List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2998551BBF6BCB00127AFD /* 143.Reorder List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F2998581BBF78EF00127AFD /* 010.Regular Expression Matching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2998571BBF78EF00127AFD /* 010.Regular Expression Matching.cpp */; settings = {ASSET_TAGS = (); }; };
		9F29985A1BCBDBDE00127AFD /* 053.Maximum Subarray.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F2998591BCBDBDE00127AFD /* 053.Maximum Subarray.cpp */; settings = {ASSET_TAGS = (); }; };
		9F29985C1BCBE2C700127AFD /* 062.Unique Paths.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F29985B1BCBE2C700127AFD /* 062.Unique Paths.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2B81BB60518009F6313 /* 203.Remove Linked List Elements.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2B71BB60518009F6313 /* 203.Remove Linked List Elements.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2BA1BB607C1009F6313 /* 038.Count and Say.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2B91BB607C1009F6313 /* 038.Count and Say.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2BC1BB60CB3009F6313 /* 014.Longest Common Prefix.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2BB1BB60CB3009F6313 /* 014.Longest Common Prefix.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2BE1BB6132B009F6313 /* 205.Isomorphic Strings.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2BD1BB6132B009F6313 /* 205.Isomorphic Strings.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2C01BB616C4009F6313 /* 067.Add Binary.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2BF1BB616C4009F6313 /* 067.Add Binary.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2C21BB63188009F6313 /* 234.Palindrome Linked List.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2C11BB63188009F6313 /* 234.Palindrome Linked List.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2C41BB63685009F6313 /* 028.Implement strStr().cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2C31BB63685009F6313 /* 028.Implement strStr().cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2C61BB6386D009F6313 /* 257.Binary Tree Paths.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2C51BB6386D009F6313 /* 257.Binary Tree Paths.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2C81BB63F65009F6313 /* 204.Count Primes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2C71BB63F65009F6313 /* 204.Count Primes.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2CA1BB67035009F6313 /* 278.First Bad Version.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2C91BB67035009F6313 /* 278.First Bad Version.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2CC1BB671F8009F6313 /* 155.Min Stack.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2CB1BB671F8009F6313 /* 155.Min Stack.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2CE1BB673D9009F6313 /* 228.Summary Ranges.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2CD1BB673D9009F6313 /* 228.Summary Ranges.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2D01BB678DF009F6313 /* 165.Compare Version Numbers.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2CF1BB678DF009F6313 /* 165.Compare Version Numbers.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2D41BB96323009F6313 /* 0001.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2D31BB96323009F6313 /* 0001.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2D61BB96B11009F6313 /* 003.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2D51BB96B11009F6313 /* 003.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2D81BBAA800009F6313 /* 00002.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2D71BBAA800009F6313 /* 00002.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2DB1BBE16BE009F6313 /* 089.Gray Code.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2DA1BBE16BE009F6313 /* 089.Gray Code.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2DD1BBE1783009F6313 /* 073.Set Matrix Zeroes.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2DC1BBE1783009F6313 /* 073.Set Matrix Zeroes.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2DF1BBE193C009F6313 /* 134.Gas Station.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2DE1BBE193C009F6313 /* 134.Gas Station.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2E11BBE1CDE009F6313 /* 135.Candy.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2E01BBE1CDE009F6313 /* 135.Candy.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2E71BBE62F9009F6313 /* 083.Remove Duplicates from Sorted List II.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2E61BBE62F9009F6313 /* 083.Remove Duplicates from Sorted List II.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2E91BBE6781009F6313 /* 024.Swap Nodes in Pairs.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2E81BBE6781009F6313 /* 024.Swap Nodes in Pairs.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2EB1BBE705E009F6313 /* 260.Single Number III.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2EA1BBE705E009F6313 /* 260.Single Number III.cpp */; settings = {ASSET_TAGS = (); }; };
		9F56A2ED1BBE73EE009F6313 /* 035.Search Insert Position.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9F56A2EC1BBE73EE009F6313 /* 035.Search Insert Position.cpp */; settings = {ASSET_TAGS = (); }; };
		9FD99B1D1BABA7250021E7DF /* 006.ZigZag_Conversion.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9FD99B1C1BABA7250021E7DF /* 006.ZigZag_Conversion.cpp */; settings = {ASSET_TAGS = (); }; };
		9FD99B1F1BABAFD90021E7DF /* 008.String_To_Interger.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 9FD99B1E1BABAFD90021E7DF /* 008.String_To_Interger.cpp */; settings = {ASSET_TAGS = (); }; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		9FD99B0E1BABA66E0021E7DF /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		9F2765601BAE9499004765F8 /* 080.Remove_Duplicates_From_Sorted_Array.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 080.Remove_Duplicates_From_Sorted_Array.cpp; sourceTree = "<group>"; };
		9F2765621BAE9E17004765F8 /* 080.Remove_From_Duplicates_Sorted_Array_2.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 080.Remove_From_Duplicates_Sorted_Array_2.cpp; sourceTree = "<group>"; };
		9F2765641BAEA59A004765F8 /* 033.Search_in_Rotated_Sorted_Array.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 033.Search_in_Rotated_Sorted_Array.cpp; sourceTree = "<group>"; };
		9F2765681BAEAFE4004765F8 /* 081.Search in Rotated Sorted Array II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "081.Search in Rotated Sorted Array II.cpp"; sourceTree = "<group>"; };
		9F27656A1BAED0C5004765F8 /* 128.Longest Consecutive Sequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "128.Longest Consecutive Sequence.cpp"; sourceTree = "<group>"; };
		9F27656C1BAEE2A4004765F8 /* 001.Two Sum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "001.Two Sum.cpp"; sourceTree = "<group>"; };
		9F27656E1BAEEE12004765F8 /* 018.4Sum.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 018.4Sum.cpp; sourceTree = "<group>"; };
		9F2765701BAEF86C004765F8 /* 027.Remove element.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "027.Remove element.cpp"; sourceTree = "<group>"; };
		9F2765721BB17A02004765F8 /* 031.Next Permutation.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "031.Next Permutation.cpp"; sourceTree = "<group>"; };
		9F2765741BB17B7F004765F8 /* 060.Permutation Sequence.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "060.Permutation Sequence.cpp"; sourceTree = "<group>"; };
		9F2765761BB1819C004765F8 /* 036.Valid Sudoku.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "036.Valid Sudoku.cpp"; sourceTree = "<group>"; };
		9F2765781BB189EC004765F8 /* 042.Trapping Rain Water.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "042.Trapping Rain Water.cpp"; sourceTree = "<group>"; };
		9F27657A1BB1955C004765F8 /* 048.Rotate Image.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "048.Rotate Image.cpp"; sourceTree = "<group>"; };
		9F27657C1BB1A1CB004765F8 /* 102.Binary Tree Level Order Traversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "102.Binary Tree Level Order Traversal.cpp"; sourceTree = "<group>"; };
		9F27657E1BB1A400004765F8 /* 107.Binary Tree Level Order Traversal II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "107.Binary Tree Level Order Traversal II.cpp"; sourceTree = "<group>"; };
		9F2765801BB1A4AE004765F8 /* 103.Binary Tree Zigzag Level Order Traversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "103.Binary Tree Zigzag Level Order Traversal.cpp"; sourceTree = "<group>"; };
		9F2765821BB271D0004765F8 /* 101.Symmetric Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "101.Symmetric Tree.cpp"; sourceTree = "<group>"; };
		9F2765841BB27384004765F8 /* 110.Balanced Binary Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "110.Balanced Binary Tree.cpp"; sourceTree = "<group>"; };
		9F2765861BB27562004765F8 /* 114.Flatten Binary Tree to Linked List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "114.Flatten Binary Tree to Linked List.cpp"; sourceTree = "<group>"; };
		9F2765881BB2785B004765F8 /* 116.Populating Next Right Pointers in Each Node.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "116.Populating Next Right Pointers in Each Node.cpp"; sourceTree = "<group>"; };
		9F27658A1BB27BD6004765F8 /* 117.Populating Next Right Pointers in Each Node II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "117.Populating Next Right Pointers in Each Node II.cpp"; sourceTree = "<group>"; };
		9F27658C1BB28040004765F8 /* 105.Construct Binary Tree from Preorder and Inorder Traversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "105.Construct Binary Tree from Preorder and Inorder Traversal.cpp"; sourceTree = "<group>"; };
		9F27658E1BB28B5B004765F8 /* 106.Construct Binary Tree from Inorder and Postorder Traversal.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "106.Construct Binary Tree from Inorder and Postorder Traversal.cpp"; sourceTree = "<group>"; };
		9F2765901BB29238004765F8 /* 098.Validate Binary Search Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "098.Validate Binary Search Tree.cpp"; sourceTree = "<group>"; };
		9F2765921BB2BC5E004765F8 /* 108.Convert Sorted Array to Binary Search Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "108.Convert Sorted Array to Binary Search Tree.cpp"; sourceTree = "<group>"; };
		9F2765941BB2C707004765F8 /* 109.Convert Sorted List to Binary Search Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "109.Convert Sorted List to Binary Search Tree.cpp"; sourceTree = "<group>"; };
		9F2765961BB2D4EF004765F8 /* 111.Minimum Depth of Binary Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "111.Minimum Depth of Binary Tree.cpp"; sourceTree = "<group>"; };
		9F2765981BB2D779004765F8 /* 129.Sum Root to Leaf Numbers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "129.Sum Root to Leaf Numbers.cpp"; sourceTree = "<group>"; };
		9F27659A1BB2DA7D004765F8 /* 050.Pow(x, n).cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "050.Pow(x, n).cpp"; sourceTree = "<group>"; };
		9F27659C1BB2DCE0004765F8 /* 069.Sqrt(x).cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "069.Sqrt(x).cpp"; sourceTree = "<group>"; };
		9F27659E1BB2E341004765F8 /* 009.Palindrome Number.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "009.Palindrome Number.cpp"; sourceTree = "<group>"; };
		9F2765A01BB2E61E004765F8 /* 258.Add Digits.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "258.Add Digits.cpp"; sourceTree = "<group>"; };
		9F2765A21BB2E69A004765F8 /* 083.Remove Duplicates from Sorted List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "083.Remove Duplicates from Sorted List.cpp"; sourceTree = "<group>"; };
		9F2765A41BB379AF004765F8 /* 088.Merge Sorted Array.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "088.Merge Sorted Array.cpp"; sourceTree = "<group>"; };
		9F2765A61BB37E54004765F8 /* 021.Merge Two Sorted Lists.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "021.Merge Two Sorted Lists.cpp"; sourceTree = "<group>"; };
		9F2765A81BB383AD004765F8 /* 023.Merge k Sorted Lists.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "023.Merge k Sorted Lists.cpp"; sourceTree = "<group>"; };
		9F2765AA1BB38685004765F8 /* 147.Insertion Sort List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "147.Insertion Sort List.cpp"; sourceTree = "<group>"; };
		9F2765AC1BB388CB004765F8 /* 148.Sort List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "148.Sort List.cpp"; sourceTree = "<group>"; };
		9F2765AE1BB38E68004765F8 /* 075.Sort Colors.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "075.Sort Colors.cpp"; sourceTree = "<group>"; };
		9F2765B11BB39276004765F8 /* 070.Climbing Stairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "070.Climbing Stairs.cpp"; sourceTree = "<group>"; };
		9F2765B31BB39378004765F8 /* 237.Delete Node in a Linked List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "237.Delete Node in a Linked List.cpp"; sourceTree = "<group>"; };
		9F2765B51BB395C5004765F8 /* 283.Move Zeroes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "283.Move Zeroes.cpp"; sourceTree = "<group>"; };
		9F2765B71BB3970A004765F8 /* 226.Invert Binary Tree.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "226.Invert Binary Tree.cpp"; sourceTree = "<group>"; };
		9F2765B91BB567FA004765F8 /* 217.Contains Duplicate.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "217.Contains Duplicate.cpp"; sourceTree = "<group>"; };
		9F2765BB1BB56C94004765F8 /* 242.Valid Anagram.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "242.Valid Anagram.cpp"; sourceTree = "<group>"; };
		9F2765BD1BB56E53004765F8 /* 013.Roman to Integer.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "013.Roman to Integer.cpp"; sourceTree = "<group>"; };
		9F2765BF1BB573B4004765F8 /* 232.Implement Queue using Stacks.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "232.Implement Queue using Stacks.cpp"; sourceTree = "<group>"; };
		9F2765C11BB57649004765F8 /* 206.Reverse Linked List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "206.Reverse Linked List.cpp"; sourceTree = "<group>"; };
		9F2765C31BB57951004765F8 /* 202.Happy Number.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "202.Happy Number.cpp"; sourceTree = "<group>"; };
		9F2765C51BB58BAC004765F8 /* 263.Ugly Number.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "263.Ugly Number.cpp"; sourceTree = "<group>"; };
		9F2765C71BB58DF2004765F8 /* 231.Power of Two.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "231.Power of Two.cpp"; sourceTree = "<group>"; };
		9F2765C91BB59067004765F8 /* 225.Implement Stack using Queues.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "225.Implement Stack using Queues.cpp"; sourceTree = "<group>"; };
		9F2765CB1BB5926F004765F8 /* 119.Pascal's Triangle II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "119.Pascal's Triangle II.cpp"; sourceTree = "<group>"; };
		9F2765CD1BB59B14004765F8 /* 019.Remove Nth Node From End of List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "019.Remove Nth Node From End of List.cpp"; sourceTree = "<group>"; };
		9F2765CF1BB59E48004765F8 /* 219.Contains Duplicate II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "219.Contains Duplicate II.cpp"; sourceTree = "<group>"; };
		9F2765D11BB5A3B8004765F8 /* 223.Rectangle Area.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "223.Rectangle Area.cpp"; sourceTree = "<group>"; };
		9F29984A1BBEBED800127AFD /* 137.Single Number II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "137.Single Number II.cpp"; sourceTree = "<group>"; };
		9F29984D1BBEC24200127AFD /* 268.Missing Number.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "268.Missing Number.cpp"; sourceTree = "<group>"; };
		9F29984F1BBEC97200127AFD /* 153.Find Minimum in Rotated Sorted Array.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "153.Find Minimum in Rotated Sorted Array.cpp"; sourceTree = "<group>"; };
		9F2998511BBED01200127AFD /* 046.Permutations.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 046.Permutations.cpp; sourceTree = "<group>"; };
		9F2998531BBF657000127AFD /* 025.Reverse Nodes in k-Group.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "025.Reverse Nodes in k-Group.cpp"; sourceTree = "<group>"; };
		9F2998551BBF6BCB00127AFD /* 143.Reorder List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "143.Reorder List.cpp"; sourceTree = "<group>"; };
		9F2998571BBF78EF00127AFD /* 010.Regular Expression Matching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "010.Regular Expression Matching.cpp"; sourceTree = "<group>"; };
		9F2998591BCBDBDE00127AFD /* 053.Maximum Subarray.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "053.Maximum Subarray.cpp"; sourceTree = "<group>"; };
		9F29985B1BCBE2C700127AFD /* 062.Unique Paths.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "062.Unique Paths.cpp"; sourceTree = "<group>"; };
		9F56A2B71BB60518009F6313 /* 203.Remove Linked List Elements.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "203.Remove Linked List Elements.cpp"; sourceTree = "<group>"; };
		9F56A2B91BB607C1009F6313 /* 038.Count and Say.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "038.Count and Say.cpp"; sourceTree = "<group>"; };
		9F56A2BB1BB60CB3009F6313 /* 014.Longest Common Prefix.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "014.Longest Common Prefix.cpp"; sourceTree = "<group>"; };
		9F56A2BD1BB6132B009F6313 /* 205.Isomorphic Strings.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "205.Isomorphic Strings.cpp"; sourceTree = "<group>"; };
		9F56A2BF1BB616C4009F6313 /* 067.Add Binary.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "067.Add Binary.cpp"; sourceTree = "<group>"; };
		9F56A2C11BB63188009F6313 /* 234.Palindrome Linked List.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "234.Palindrome Linked List.cpp"; sourceTree = "<group>"; };
		9F56A2C31BB63685009F6313 /* 028.Implement strStr().cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "028.Implement strStr().cpp"; sourceTree = "<group>"; };
		9F56A2C51BB6386D009F6313 /* 257.Binary Tree Paths.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "257.Binary Tree Paths.cpp"; sourceTree = "<group>"; };
		9F56A2C71BB63F65009F6313 /* 204.Count Primes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "204.Count Primes.cpp"; sourceTree = "<group>"; };
		9F56A2C91BB67035009F6313 /* 278.First Bad Version.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "278.First Bad Version.cpp"; sourceTree = "<group>"; };
		9F56A2CB1BB671F8009F6313 /* 155.Min Stack.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "155.Min Stack.cpp"; sourceTree = "<group>"; };
		9F56A2CD1BB673D9009F6313 /* 228.Summary Ranges.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "228.Summary Ranges.cpp"; sourceTree = "<group>"; };
		9F56A2CF1BB678DF009F6313 /* 165.Compare Version Numbers.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "165.Compare Version Numbers.cpp"; sourceTree = "<group>"; };
		9F56A2D31BB96323009F6313 /* 0001.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 0001.cpp; sourceTree = "<group>"; };
		9F56A2D51BB96B11009F6313 /* 003.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 003.cpp; sourceTree = "<group>"; };
		9F56A2D71BBAA800009F6313 /* 00002.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 00002.cpp; sourceTree = "<group>"; };
		9F56A2DA1BBE16BE009F6313 /* 089.Gray Code.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "089.Gray Code.cpp"; sourceTree = "<group>"; };
		9F56A2DC1BBE1783009F6313 /* 073.Set Matrix Zeroes.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "073.Set Matrix Zeroes.cpp"; sourceTree = "<group>"; };
		9F56A2DE1BBE193C009F6313 /* 134.Gas Station.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "134.Gas Station.cpp"; sourceTree = "<group>"; };
		9F56A2E01BBE1CDE009F6313 /* 135.Candy.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 135.Candy.cpp; sourceTree = "<group>"; };
		9F56A2E61BBE62F9009F6313 /* 083.Remove Duplicates from Sorted List II.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "083.Remove Duplicates from Sorted List II.cpp"; sourceTree = "<group>"; };
		9F56A2E81BBE6781009F6313 /* 024.Swap Nodes in Pairs.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "024.Swap Nodes in Pairs.cpp"; sourceTree = "<group>"; };
		9F56A2EA1BBE705E009F6313 /* 260.Single Number III.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "260.Single Number III.cpp"; sourceTree = "<group>"; };
		9F56A2EC1BBE73EE009F6313 /* 035.Search Insert Position.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "035.Search Insert Position.cpp"; sourceTree = "<group>"; };
		9FD99B101BABA66E0021E7DF /* Try_My_Best */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Try_My_Best; sourceTree = BUILT_PRODUCTS_DIR; };
		9FD99B1C1BABA7250021E7DF /* 006.ZigZag_Conversion.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 006.ZigZag_Conversion.cpp; sourceTree = "<group>"; };
		9FD99B1E1BABAFD90021E7DF /* 008.String_To_Interger.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 008.String_To_Interger.cpp; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		9FD99B0D1BABA66E0021E7DF /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		9F56A2D91BBE1699009F6313 /* microsoft */ = {
			isa = PBXGroup;
			children = (
				9F56A2D31BB96323009F6313 /* 0001.cpp */,
				9F56A2D71BBAA800009F6313 /* 00002.cpp */,
			);
			name = microsoft;
			sourceTree = "<group>";
		};
		9FD99B071BABA66E0021E7DF = {
			isa = PBXGroup;
			children = (
				9FD99B121BABA66E0021E7DF /* Try_My_Best */,
				9FD99B111BABA66E0021E7DF /* Products */,
			);
			sourceTree = "<group>";
		};
		9FD99B111BABA66E0021E7DF /* Products */ = {
			isa = PBXGroup;
			children = (
				9FD99B101BABA66E0021E7DF /* Try_My_Best */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		9FD99B121BABA66E0021E7DF /* Try_My_Best */ = {
			isa = PBXGroup;
			children = (
				9F27656C1BAEE2A4004765F8 /* 001.Two Sum.cpp */,
				9F56A2D51BB96B11009F6313 /* 003.cpp */,
				9FD99B1C1BABA7250021E7DF /* 006.ZigZag_Conversion.cpp */,
				9FD99B1E1BABAFD90021E7DF /* 008.String_To_Interger.cpp */,
				9F27659E1BB2E341004765F8 /* 009.Palindrome Number.cpp */,
				9F2998571BBF78EF00127AFD /* 010.Regular Expression Matching.cpp */,
				9F2765BD1BB56E53004765F8 /* 013.Roman to Integer.cpp */,
				9F56A2BB1BB60CB3009F6313 /* 014.Longest Common Prefix.cpp */,
				9F27656E1BAEEE12004765F8 /* 018.4Sum.cpp */,
				9F2765CD1BB59B14004765F8 /* 019.Remove Nth Node From End of List.cpp */,
				9F2765A61BB37E54004765F8 /* 021.Merge Two Sorted Lists.cpp */,
				9F2765A81BB383AD004765F8 /* 023.Merge k Sorted Lists.cpp */,
				9F56A2E81BBE6781009F6313 /* 024.Swap Nodes in Pairs.cpp */,
				9F2998531BBF657000127AFD /* 025.Reverse Nodes in k-Group.cpp */,
				9F2765701BAEF86C004765F8 /* 027.Remove element.cpp */,
				9F56A2C31BB63685009F6313 /* 028.Implement strStr().cpp */,
				9F2765721BB17A02004765F8 /* 031.Next Permutation.cpp */,
				9F2765641BAEA59A004765F8 /* 033.Search_in_Rotated_Sorted_Array.cpp */,
				9F56A2EC1BBE73EE009F6313 /* 035.Search Insert Position.cpp */,
				9F2765761BB1819C004765F8 /* 036.Valid Sudoku.cpp */,
				9F56A2B91BB607C1009F6313 /* 038.Count and Say.cpp */,
				9F2765781BB189EC004765F8 /* 042.Trapping Rain Water.cpp */,
				9F2998511BBED01200127AFD /* 046.Permutations.cpp */,
				9F27657A1BB1955C004765F8 /* 048.Rotate Image.cpp */,
				9F27659A1BB2DA7D004765F8 /* 050.Pow(x, n).cpp */,
				9F2765741BB17B7F004765F8 /* 060.Permutation Sequence.cpp */,
				9F56A2BF1BB616C4009F6313 /* 067.Add Binary.cpp */,
				9F27659C1BB2DCE0004765F8 /* 069.Sqrt(x).cpp */,
				9F2765B11BB39276004765F8 /* 070.Climbing Stairs.cpp */,
				9F56A2DC1BBE1783009F6313 /* 073.Set Matrix Zeroes.cpp */,
				9F2765AE1BB38E68004765F8 /* 075.Sort Colors.cpp */,
				9F2765601BAE9499004765F8 /* 080.Remove_Duplicates_From_Sorted_Array.cpp */,
				9F2765621BAE9E17004765F8 /* 080.Remove_From_Duplicates_Sorted_Array_2.cpp */,
				9F2765681BAEAFE4004765F8 /* 081.Search in Rotated Sorted Array II.cpp */,
				9F56A2E61BBE62F9009F6313 /* 083.Remove Duplicates from Sorted List II.cpp */,
				9F2765A21BB2E69A004765F8 /* 083.Remove Duplicates from Sorted List.cpp */,
				9F2765A41BB379AF004765F8 /* 088.Merge Sorted Array.cpp */,
				9F56A2DA1BBE16BE009F6313 /* 089.Gray Code.cpp */,
				9F2765901BB29238004765F8 /* 098.Validate Binary Search Tree.cpp */,
				9F2765821BB271D0004765F8 /* 101.Symmetric Tree.cpp */,
				9F27657C1BB1A1CB004765F8 /* 102.Binary Tree Level Order Traversal.cpp */,
				9F2765801BB1A4AE004765F8 /* 103.Binary Tree Zigzag Level Order Traversal.cpp */,
				9F27658C1BB28040004765F8 /* 105.Construct Binary Tree from Preorder and Inorder Traversal.cpp */,
				9F27658E1BB28B5B004765F8 /* 106.Construct Binary Tree from Inorder and Postorder Traversal.cpp */,
				9F27657E1BB1A400004765F8 /* 107.Binary Tree Level Order Traversal II.cpp */,
				9F2765921BB2BC5E004765F8 /* 108.Convert Sorted Array to Binary Search Tree.cpp */,
				9F2765941BB2C707004765F8 /* 109.Convert Sorted List to Binary Search Tree.cpp */,
				9F2765841BB27384004765F8 /* 110.Balanced Binary Tree.cpp */,
				9F2765961BB2D4EF004765F8 /* 111.Minimum Depth of Binary Tree.cpp */,
				9F2765861BB27562004765F8 /* 114.Flatten Binary Tree to Linked List.cpp */,
				9F2765881BB2785B004765F8 /* 116.Populating Next Right Pointers in Each Node.cpp */,
				9F27658A1BB27BD6004765F8 /* 117.Populating Next Right Pointers in Each Node II.cpp */,
				9F2765CB1BB5926F004765F8 /* 119.Pascal's Triangle II.cpp */,
				9F27656A1BAED0C5004765F8 /* 128.Longest Consecutive Sequence.cpp */,
				9F2765981BB2D779004765F8 /* 129.Sum Root to Leaf Numbers.cpp */,
				9F56A2DE1BBE193C009F6313 /* 134.Gas Station.cpp */,
				9F56A2E01BBE1CDE009F6313 /* 135.Candy.cpp */,
				9F29984A1BBEBED800127AFD /* 137.Single Number II.cpp */,
				9F2998551BBF6BCB00127AFD /* 143.Reorder List.cpp */,
				9F2765AA1BB38685004765F8 /* 147.Insertion Sort List.cpp */,
				9F2765AC1BB388CB004765F8 /* 148.Sort List.cpp */,
				9F29984F1BBEC97200127AFD /* 153.Find Minimum in Rotated Sorted Array.cpp */,
				9F56A2CB1BB671F8009F6313 /* 155.Min Stack.cpp */,
				9F56A2CF1BB678DF009F6313 /* 165.Compare Version Numbers.cpp */,
				9F2765C31BB57951004765F8 /* 202.Happy Number.cpp */,
				9F56A2B71BB60518009F6313 /* 203.Remove Linked List Elements.cpp */,
				9F56A2C71BB63F65009F6313 /* 204.Count Primes.cpp */,
				9F56A2BD1BB6132B009F6313 /* 205.Isomorphic Strings.cpp */,
				9F2765C11BB57649004765F8 /* 206.Reverse Linked List.cpp */,
				9F2765B91BB567FA004765F8 /* 217.Contains Duplicate.cpp */,
				9F2765CF1BB59E48004765F8 /* 219.Contains Duplicate II.cpp */,
				9F2765D11BB5A3B8004765F8 /* 223.Rectangle Area.cpp */,
				9F2765C91BB59067004765F8 /* 225.Implement Stack using Queues.cpp */,
				9F2765B71BB3970A004765F8 /* 226.Invert Binary Tree.cpp */,
				9F56A2CD1BB673D9009F6313 /* 228.Summary Ranges.cpp */,
				9F2765C71BB58DF2004765F8 /* 231.Power of Two.cpp */,
				9F2765BF1BB573B4004765F8 /* 232.Implement Queue using Stacks.cpp */,
				9F56A2C11BB63188009F6313 /* 234.Palindrome Linked List.cpp */,
				9F2765B31BB39378004765F8 /* 237.Delete Node in a Linked List.cpp */,
				9F2765BB1BB56C94004765F8 /* 242.Valid Anagram.cpp */,
				9F56A2C51BB6386D009F6313 /* 257.Binary Tree Paths.cpp */,
				9F2765A01BB2E61E004765F8 /* 258.Add Digits.cpp */,
				9F56A2EA1BBE705E009F6313 /* 260.Single Number III.cpp */,
				9F2765C51BB58BAC004765F8 /* 263.Ugly Number.cpp */,
				9F29984D1BBEC24200127AFD /* 268.Missing Number.cpp */,
				9F56A2C91BB67035009F6313 /* 278.First Bad Version.cpp */,
				9F2765B51BB395C5004765F8 /* 283.Move Zeroes.cpp */,
				9F56A2D91BBE1699009F6313 /* microsoft */,
				9F2998591BCBDBDE00127AFD /* 053.Maximum Subarray.cpp */,
				9F29985B1BCBE2C700127AFD /* 062.Unique Paths.cpp */,
			);
			path = Try_My_Best;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		9FD99B0F1BABA66E0021E7DF /* Try_My_Best */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 9FD99B171BABA66E0021E7DF /* Build configuration list for PBXNativeTarget "Try_My_Best" */;
			buildPhases = (
				9FD99B0C1BABA66E0021E7DF /* Sources */,
				9FD99B0D1BABA66E0021E7DF /* Frameworks */,
				9FD99B0E1BABA66E0021E7DF /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Try_My_Best;
			productName = Try_My_Best;
			productReference = 9FD99B101BABA66E0021E7DF /* Try_My_Best */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		9FD99B081BABA66E0021E7DF /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0700;
				ORGANIZATIONNAME = "陈悦莹";
				TargetAttributes = {
					9FD99B0F1BABA66E0021E7DF = {
						CreatedOnToolsVersion = 7.0;
					};
				};
			};
			buildConfigurationList = 9FD99B0B1BABA66E0021E7DF /* Build configuration list for PBXProject "Try_My_Best" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = 9FD99B071BABA66E0021E7DF;
			productRefGroup = 9FD99B111BABA66E0021E7DF /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				9FD99B0F1BABA66E0021E7DF /* Try_My_Best */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		9FD99B0C1BABA66E0021E7DF /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9F2765D21BB5A3B8004765F8 /* 223.Rectangle Area.cpp in Sources */,
				9F56A2D01BB678DF009F6313 /* 165.Compare Version Numbers.cpp in Sources */,
				9F2765C41BB57951004765F8 /* 202.Happy Number.cpp in Sources */,
				9F56A2EB1BBE705E009F6313 /* 260.Single Number III.cpp in Sources */,
				9F27659D1BB2DCE0004765F8 /* 069.Sqrt(x).cpp in Sources */,
				9F2765B81BB3970A004765F8 /* 226.Invert Binary Tree.cpp in Sources */,
				9F2765871BB27562004765F8 /* 114.Flatten Binary Tree to Linked List.cpp in Sources */,
				9F2765851BB27384004765F8 /* 110.Balanced Binary Tree.cpp in Sources */,
				9F2765891BB2785B004765F8 /* 116.Populating Next Right Pointers in Each Node.cpp in Sources */,
				9F2765711BAEF86C004765F8 /* 027.Remove element.cpp in Sources */,
				9F27656B1BAED0C5004765F8 /* 128.Longest Consecutive Sequence.cpp in Sources */,
				9F27658F1BB28B5B004765F8 /* 106.Construct Binary Tree from Inorder and Postorder Traversal.cpp in Sources */,
				9F2765771BB1819C004765F8 /* 036.Valid Sudoku.cpp in Sources */,
				9F2765831BB271D0004765F8 /* 101.Symmetric Tree.cpp in Sources */,
				9FD99B1D1BABA7250021E7DF /* 006.ZigZag_Conversion.cpp in Sources */,
				9F56A2DB1BBE16BE009F6313 /* 089.Gray Code.cpp in Sources */,
				9F2765731BB17A02004765F8 /* 031.Next Permutation.cpp in Sources */,
				9F2765CC1BB5926F004765F8 /* 119.Pascal's Triangle II.cpp in Sources */,
				9F2765A91BB383AD004765F8 /* 023.Merge k Sorted Lists.cpp in Sources */,
				9F56A2BA1BB607C1009F6313 /* 038.Count and Say.cpp in Sources */,
				9F56A2D41BB96323009F6313 /* 0001.cpp in Sources */,
				9F2765631BAE9E17004765F8 /* 080.Remove_From_Duplicates_Sorted_Array_2.cpp in Sources */,
				9F27659F1BB2E341004765F8 /* 009.Palindrome Number.cpp in Sources */,
				9F2765A51BB379AF004765F8 /* 088.Merge Sorted Array.cpp in Sources */,
				9F56A2DD1BBE1783009F6313 /* 073.Set Matrix Zeroes.cpp in Sources */,
				9F56A2C21BB63188009F6313 /* 234.Palindrome Linked List.cpp in Sources */,
				9F2765A71BB37E54004765F8 /* 021.Merge Two Sorted Lists.cpp in Sources */,
				9F2765CE1BB59B14004765F8 /* 019.Remove Nth Node From End of List.cpp in Sources */,
				9F29985A1BCBDBDE00127AFD /* 053.Maximum Subarray.cpp in Sources */,
				9F29984E1BBEC24200127AFD /* 268.Missing Number.cpp in Sources */,
				9F2998581BBF78EF00127AFD /* 010.Regular Expression Matching.cpp in Sources */,
				9F2765651BAEA59A004765F8 /* 033.Search_in_Rotated_Sorted_Array.cpp in Sources */,
				9F2765CA1BB59067004765F8 /* 225.Implement Stack using Queues.cpp in Sources */,
				9F2765C61BB58BAC004765F8 /* 263.Ugly Number.cpp in Sources */,
				9F56A2ED1BBE73EE009F6313 /* 035.Search Insert Position.cpp in Sources */,
				9F56A2CC1BB671F8009F6313 /* 155.Min Stack.cpp in Sources */,
				9F2765D01BB59E48004765F8 /* 219.Contains Duplicate II.cpp in Sources */,
				9F56A2C01BB616C4009F6313 /* 067.Add Binary.cpp in Sources */,
				9F2765AD1BB388CB004765F8 /* 148.Sort List.cpp in Sources */,
				9F2765B21BB39276004765F8 /* 070.Climbing Stairs.cpp in Sources */,
				9F2765991BB2D779004765F8 /* 129.Sum Root to Leaf Numbers.cpp in Sources */,
				9F2765911BB29238004765F8 /* 098.Validate Binary Search Tree.cpp in Sources */,
				9F2765751BB17B7F004765F8 /* 060.Permutation Sequence.cpp in Sources */,
				9F56A2B81BB60518009F6313 /* 203.Remove Linked List Elements.cpp in Sources */,
				9F56A2CE1BB673D9009F6313 /* 228.Summary Ranges.cpp in Sources */,
				9F2765C21BB57649004765F8 /* 206.Reverse Linked List.cpp in Sources */,
				9F2765AF1BB38E68004765F8 /* 075.Sort Colors.cpp in Sources */,
				9F2765951BB2C707004765F8 /* 109.Convert Sorted List to Binary Search Tree.cpp in Sources */,
				9F56A2C81BB63F65009F6313 /* 204.Count Primes.cpp in Sources */,
				9F2765BE1BB56E53004765F8 /* 013.Roman to Integer.cpp in Sources */,
				9F2765A31BB2E69A004765F8 /* 083.Remove Duplicates from Sorted List.cpp in Sources */,
				9F27657D1BB1A1CB004765F8 /* 102.Binary Tree Level Order Traversal.cpp in Sources */,
				9F2765B61BB395C5004765F8 /* 283.Move Zeroes.cpp in Sources */,
				9F2998541BBF657000127AFD /* 025.Reverse Nodes in k-Group.cpp in Sources */,
				9F56A2E11BBE1CDE009F6313 /* 135.Candy.cpp in Sources */,
				9F2765C81BB58DF2004765F8 /* 231.Power of Two.cpp in Sources */,
				9F27657B1BB1955C004765F8 /* 048.Rotate Image.cpp in Sources */,
				9FD99B1F1BABAFD90021E7DF /* 008.String_To_Interger.cpp in Sources */,
				9F2765B41BB39378004765F8 /* 237.Delete Node in a Linked List.cpp in Sources */,
				9F2765971BB2D4EF004765F8 /* 111.Minimum Depth of Binary Tree.cpp in Sources */,
				9F27658B1BB27BD6004765F8 /* 117.Populating Next Right Pointers in Each Node II.cpp in Sources */,
				9F2765BA1BB567FA004765F8 /* 217.Contains Duplicate.cpp in Sources */,
				9F2765A11BB2E61E004765F8 /* 258.Add Digits.cpp in Sources */,
				9F2765611BAE9499004765F8 /* 080.Remove_Duplicates_From_Sorted_Array.cpp in Sources */,
				9F2765811BB1A4AE004765F8 /* 103.Binary Tree Zigzag Level Order Traversal.cpp in Sources */,
				9F27656D1BAEE2A4004765F8 /* 001.Two Sum.cpp in Sources */,
				9F29985C1BCBE2C700127AFD /* 062.Unique Paths.cpp in Sources */,
				9F56A2BC1BB60CB3009F6313 /* 014.Longest Common Prefix.cpp in Sources */,
				9F27658D1BB28040004765F8 /* 105.Construct Binary Tree from Preorder and Inorder Traversal.cpp in Sources */,
				9F2765691BAEAFE4004765F8 /* 081.Search in Rotated Sorted Array II.cpp in Sources */,
				9F2998521BBED01200127AFD /* 046.Permutations.cpp in Sources */,
				9F2998501BBEC97200127AFD /* 153.Find Minimum in Rotated Sorted Array.cpp in Sources */,
				9F2765791BB189EC004765F8 /* 042.Trapping Rain Water.cpp in Sources */,
				9F27659B1BB2DA7D004765F8 /* 050.Pow(x, n).cpp in Sources */,
				9F56A2D81BBAA800009F6313 /* 00002.cpp in Sources */,
				9F56A2CA1BB67035009F6313 /* 278.First Bad Version.cpp in Sources */,
				9F2765931BB2BC5E004765F8 /* 108.Convert Sorted Array to Binary Search Tree.cpp in Sources */,
				9F2998561BBF6BCB00127AFD /* 143.Reorder List.cpp in Sources */,
				9F2765AB1BB38685004765F8 /* 147.Insertion Sort List.cpp in Sources */,
				9F56A2E71BBE62F9009F6313 /* 083.Remove Duplicates from Sorted List II.cpp in Sources */,
				9F29984B1BBEBED800127AFD /* 137.Single Number II.cpp in Sources */,
				9F27657F1BB1A400004765F8 /* 107.Binary Tree Level Order Traversal II.cpp in Sources */,
				9F2765BC1BB56C94004765F8 /* 242.Valid Anagram.cpp in Sources */,
				9F56A2BE1BB6132B009F6313 /* 205.Isomorphic Strings.cpp in Sources */,
				9F2765C01BB573B4004765F8 /* 232.Implement Queue using Stacks.cpp in Sources */,
				9F56A2E91BBE6781009F6313 /* 024.Swap Nodes in Pairs.cpp in Sources */,
				9F56A2DF1BBE193C009F6313 /* 134.Gas Station.cpp in Sources */,
				9F56A2C41BB63685009F6313 /* 028.Implement strStr().cpp in Sources */,
				9F27656F1BAEEE12004765F8 /* 018.4Sum.cpp in Sources */,
				9F56A2C61BB6386D009F6313 /* 257.Binary Tree Paths.cpp in Sources */,
				9F56A2D61BB96B11009F6313 /* 003.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		9FD99B151BABA66E0021E7DF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		9FD99B161BABA66E0021E7DF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
			};
			name = Release;
		};
		9FD99B181BABA66E0021E7DF /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		9FD99B191BABA66E0021E7DF /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		9FD99B0B1BABA66E0021E7DF /* Build configuration list for PBXProject "Try_My_Best" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9FD99B151BABA66E0021E7DF /* Debug */,
				9FD99B161BABA66E0021E7DF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		9FD99B171BABA66E0021E7DF /* Build configuration list for PBXNativeTarget "Try_My_Best" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				9FD99B181BABA66E0021E7DF /* Debug */,
				9FD99B191BABA66E0021E7DF /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 9FD99B081BABA66E0021E7DF /* Project object */;
}
